<UserControl x:Class="Client.Desktop.Views.AuthManageView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:administration="clr-namespace:Client.Desktop.ViewModels.Content.Administration;assembly=Client.Desktop.ViewModels"
             xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:behaviors="clr-namespace:Client.Desktop.Views.Behaviors"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
             d:DataContext="{d:DesignInstance administration:AuthManageViewModel}">

    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverterKey"></BooleanToVisibilityConverter>
    </UserControl.Resources>

    <b:Interaction.Triggers>
        <b:EventTrigger EventName="Loaded">
            <b:InvokeCommandAction Command="{Binding InitilizeCommand}"/>
        </b:EventTrigger>
    </b:Interaction.Triggers>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="4*"/>
            <ColumnDefinition Width="5*"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <StackPanel Grid.Row="0"
                    Grid.Column="0"
                    Orientation="Horizontal">
            <Button Content="Add"
                    Command="{Binding AddCommand}"
                    />
            <Button Content="Delete"
                    Command="{Binding DeleteCommand}"
                    />
        </StackPanel>
        
        <DataGrid Grid.Row="1"
                  Grid.Column="0"
                  Height="Auto"
                  ItemsSource="{Binding Accounts}"
                  SelectedItem="{Binding SelectedAccount}"
                  SelectionMode="Single"
                  VerticalScrollBarVisibility="Visible"
                  AllowDrop="True" 
                  IsReadOnly="True"
                  HorizontalAlignment="Stretch"
                  AutoGenerateColumns="False"
                  IsTextSearchEnabled="True"
                  IsTextSearchCaseSensitive="False">

            <DataGrid.Columns>
                <DataGridTextColumn Header="UserName" Binding="{Binding UserName}" />
                <DataGridTextColumn Header="Login" Binding="{Binding Login}" Width="200" />
                <DataGridTextColumn Header="Email" Binding="{Binding Email}" Width="*" />
            </DataGrid.Columns>
        </DataGrid>

        <Grid Grid.Row="1"
              Grid.Column="1"
              Margin="10">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>


            <TextBox Grid.Row="0" 
                     Text="{Binding SelectedAccount.UserName, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" 
                     materialDesign:HintAssist.Hint="User Name"
                     Margin="10"
                     />


            <TextBox Grid.Row="1" 
                     Text="{Binding SelectedAccount.Login, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"
                     materialDesign:HintAssist.Hint="Login"
                     Margin="10"
                     />

            <PasswordBox Grid.Row="2" 
                         x:Name="PasswordBox" 
                         materialDesign:HintAssist.Hint="Password"
                         Margin="10"
                         >
                <b:Interaction.Behaviors>
                    <behaviors:PasswordBoxBehavior Password="{Binding SelectedAccount.Password, Mode=TwoWay, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"
                                                   ResetObject="{Binding SelectedAccount}"/>
                </b:Interaction.Behaviors>
            </PasswordBox>

            <PasswordBox Grid.Row="3" 
                         x:Name="RepeatPasswordBox" 
                         materialDesign:HintAssist.Hint="Repeat Password"
                         Margin="10"
            >
                <b:Interaction.Behaviors>
                    <behaviors:PasswordBoxBehavior Password="{Binding SelectedAccount.RepeatPassword, Mode=TwoWay, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"
                                                   ResetObject="{Binding SelectedAccount}"/>
                </b:Interaction.Behaviors>
            </PasswordBox>

            <TextBox Grid.Row="4" 
                     Text="{Binding SelectedAccount.Email, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"
                     materialDesign:HintAssist.Hint="E-mail"
                     Margin="10"
            />           
            

            <ComboBox Grid.Row="5" 
                      ItemsSource="{Binding Roles}" 
                      SelectedValue="{Binding SelectedAccount.Role}"
                      materialDesign:HintAssist.Hint="Role"
                      Margin="10"/>


            <DockPanel Grid.Row="6" LastChildFill="True" Margin="10">
                
                <Button DockPanel.Dock="Right" 
                        Content="Settings" 
                        Command="{Binding ReaderSettingCommand}"
                        />

                <ComboBox  ItemsSource="{Binding RfidReaders}" 
                           SelectedValue="{Binding SelectedAccountDetails.ReaderId}"
                           materialDesign:HintAssist.Hint="Reader"
                           DisplayMemberPath="Name" 
                           SelectedValuePath="Id" 
                           DockPanel.Dock="Left" 
                           Margin="10"
                           />

            </DockPanel>

            <Button Grid.Row="7"
                    Content="Save"
                    Command="{Binding SaveCommand}"
                    HorizontalAlignment="Left"
            />

        </Grid>
    </Grid>
</UserControl>
