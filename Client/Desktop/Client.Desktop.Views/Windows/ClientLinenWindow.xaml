<local:CustomWindow x:Class="Client.Desktop.Views.Windows.ClientLinenWindow"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                    xmlns:local="clr-namespace:Client.Desktop.Views.Windows"
                    xmlns:windows="clr-namespace:Client.Desktop.ViewModels.Windows;assembly=Client.Desktop.ViewModels"
                    xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                    xmlns:customControl="clr-namespace:Client.Desktop.Views.CustomControl"
                    mc:Ignorable="d"
                    Title="Client Linen"
                    Height="500"
                    Width="600"
                    WindowStartupLocation="CenterOwner"
                    WindowStyle="ToolWindow"
                    d:DataContext="{d:DesignInstance windows:ClientLinenWindowModel}" BorderBrush="Black" Background="White" BorderThickness="2">


    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverterKey"/>
    </Window.Resources>

    <b:Interaction.Triggers>
        <b:EventTrigger EventName="Loaded">
            <b:InvokeCommandAction Command="{Binding InitializeCommand}"/>
        </b:EventTrigger>
    </b:Interaction.Triggers>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="0.4*" />
            <RowDefinition Height="0.4*" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <DockPanel  Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" LastChildFill="False" >
            <Button DockPanel.Dock="Left"  Content="Save" Command="{Binding SaveCommand}"/>
            <!--<Button DockPanel.Dock="Left"  Content="New" Command="{Binding NewCommand}"/>-->
            <Button DockPanel.Dock="Left"  Content="Delete" Command="{Binding DeleteCommand}"/>
            <Button DockPanel.Dock="Right" Content="Close" Command="{Binding CloseCommand}"/>
        </DockPanel>


        <!-- Client -->
        <ComboBox Grid.Row="1"
                  Grid.Column="0"
                  ItemsSource="{Binding Clients}" 
                  SelectedValue="{Binding SelectedLinen.ClientId, ValidatesOnDataErrors=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                  materialDesign:HintAssist.Hint="Client"
                  SelectedValuePath="Id"
                  DisplayMemberPath="Name"
                  Margin="10,20,20,0"
                  FontSize="20"
                  Height="45"
        />

        <!-- Department -->
        <ComboBox Grid.Row="1"
                  Grid.Column="1"
                  ItemsSource="{Binding SortedDepartments}"
                  SelectedItem="{Binding SelectedDepartment, ValidatesOnDataErrors=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                  DisplayMemberPath="Name"
                  materialDesign:HintAssist.Hint="Department"
                  Margin="0,20,20,0"
                  FontSize="20"
                  Height="45"
        />

        <!-- Staff -->
        <ComboBox Grid.Row="2"
                  Grid.Column="0"
                  Grid.ColumnSpan="2"
                  ItemsSource="{Binding SortedStaffs}"
                  SelectedValue="{Binding SelectedLinen.DepartmentId, ValidatesOnDataErrors=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                  materialDesign:TextFieldAssist.HasClearButton="True"
                  materialDesign:HintAssist.Hint="Staff"
                  SelectedValuePath="Id"
                  DisplayMemberPath="Name"
                  IsEditable="False"
                  Margin="10"
                  Height="Auto"
                  >
        </ComboBox>


        <Grid Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2" >
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            
        <!-- Id -->
            <TextBox Grid.Row="0" 
                     Grid.Column="0"
                     Text="{Binding SelectedLinen.Id, UpdateSourceTrigger=PropertyChanged}"
                     IsReadOnly="True"
                     IsEnabled="False"
                     FontSize="20"
                     Padding="0"
                     Margin="20,0"

            />

        <!-- Linen Name -->
            <ComboBox Grid.Row="0" 
                      Grid.Column="1"
                      ItemsSource="{Binding MasterLinens}"
                      SelectedValue="{Binding SelectedLinen.MasterLinenId, ValidatesOnDataErrors=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                      DisplayMemberPath="Name"
                      VerticalContentAlignment="Center"
                      SelectedValuePath="Id"
                      IsEditable="False"
                      materialDesign:HintAssist.Hint="Linen">
            </ComboBox>

            <!-- Packing Value -->
            <customControl:MaskedTextBox Grid.Row="0" 
                                         Grid.Column="2"
                                         Text="{Binding SelectedLinen.PackingValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" 
                                         materialDesign:HintAssist.Hint="P.V."
                                         Mask="Decimal"
                                         MaxLength="2"
                                         MinWidth="100"
                                         HorizontalContentAlignment="Center"
                                         />

        <!-- Tag -->
            <TextBox  Grid.Row="1" 
                      Grid.Column="0"
                      Grid.ColumnSpan="2"
                      materialDesign:HintAssist.Hint="RFID Tag" 
                      Text="{Binding SelectedLinen.Tag, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" 
                      MaxLength="30"
                      AllowDrop="True"
                      TextWrapping="Wrap"
                      />


        </Grid>

    </Grid>
</local:CustomWindow>
