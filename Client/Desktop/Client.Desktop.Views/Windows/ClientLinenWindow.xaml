<local:CustomWindow x:Class="Client.Desktop.Views.Windows.ClientLinenWindow"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                    xmlns:local="clr-namespace:Client.Desktop.Views.Windows"
                    xmlns:windows="clr-namespace:Client.Desktop.ViewModels.Windows;assembly=Client.Desktop.ViewModels"
                    xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                    mc:Ignorable="d"
                    Title="Client Linen"
                    Height="Auto"
                    Width="600"
                    WindowStartupLocation="CenterOwner"
                    WindowStyle="ToolWindow"
                    d:DataContext="{d:DesignInstance windows:ClientLinenWindowModel}" BorderBrush="Black" Background="White" BorderThickness="2">


    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverterKey"/>
    </Window.Resources>

    <b:Interaction.Triggers>
        <b:EventTrigger EventName="Loaded">
            <b:InvokeCommandAction Command="{Binding InitializeCommand}"/>
        </b:EventTrigger>
    </b:Interaction.Triggers>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="2*"/>
        </Grid.ColumnDefinitions>

        <DockPanel  Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" LastChildFill="False" Margin="10">
            <Button DockPanel.Dock="Left"  Content="Save" Command="{Binding SaveCommand}"/>
            <Button DockPanel.Dock="Left"  Content="New" Command="{Binding NewCommand}"/>
            <Button DockPanel.Dock="Left"  Content="Delete" Command="{Binding DeleteCommand}"/>
            <Button DockPanel.Dock="Right" Content="Close" Command="{Binding CloseCommand}"/>
        </DockPanel>


        <Grid Grid.Row="1" Grid.Column="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>


            <!-- Client -->
            <ComboBox Grid.Row="0" 
                      ItemsSource="{Binding Clients}" 
                      SelectedValue="{Binding SelectedLinen.ClientId, ValidatesOnDataErrors=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                      materialDesign:TextFieldAssist.HasClearButton="True"
                      materialDesign:HintAssist.Hint="Client"
                      SelectedValuePath="Id"
                      DisplayMemberPath="Name"
                      Margin="20"
            />

            <!-- Department -->
            <ComboBox Grid.Row="1"
                      ItemsSource="{Binding SortedDepartments}"
                      SelectedValue="{Binding SelectedLinen.DepartmentId, ValidatesOnDataErrors=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                      SelectedValuePath="Id"
                      DisplayMemberPath="Name"
                      materialDesign:TextFieldAssist.HasClearButton="True"
                      materialDesign:HintAssist.Hint="Department"
                      Margin="20"
            />

            <!-- Staff -->
            <ComboBox Grid.Row="2"
                      ItemsSource="{Binding SortedStaffs}"
                      SelectedValue="{Binding SelectedLinen.StaffId}"
                      SelectedValuePath="Id"
                      DisplayMemberPath="Name"
                      IsEditable="False">
            </ComboBox>
        </Grid>

        <Grid Grid.Row="1" Grid.Column="1" Margin="10,0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            
            <!-- Id -->
            <GroupBox Header="Id" Grid.Row="0" Grid.Column="0">
                <Label Content="{Binding SelectedLinen.Id, UpdateSourceTrigger=PropertyChanged}"
                       Margin="5"/>
            </GroupBox>

            <!-- Linen Name -->
            <GroupBox Header="Linen" Grid.Row="0" Grid.Column="1">
                <ComboBox ItemsSource="{Binding MasterLinens}"
                          SelectedValue="{Binding SelectedLinen.MasterLinenId, ValidatesOnDataErrors=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          DisplayMemberPath="Name"
                          VerticalContentAlignment="Center"
                          SelectedValuePath="Id"
                          IsEditable="False">
                </ComboBox>
            </GroupBox>

            <!-- Packing Value -->
            <GroupBox Header="Packing Value" Grid.Row="1" Grid.Column="0">
                <TextBox Text="{Binding SelectedLinen.PackingValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Width="Auto" TextWrapping="Wrap" />
            </GroupBox>

            <!-- Tag -->
            <GroupBox Header="RFID Tag" Grid.Row="1" Grid.Column="1">
                <TextBox materialDesign:HintAssist.Hint="Hint 1" Text="{Binding SelectedLinen.Tag, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Width="Auto" TextWrapping="Wrap" />
            </GroupBox>

            <!--<Label Grid.Row="2"
                   Grid.Column="0"
                   Grid.ColumnSpan="2"
                   Content="{Binding SelectedLinen.Error, UpdateSourceTrigger=PropertyChanged }"
                   Foreground="Red"
                   MinHeight="30"/>-->

        </Grid>

    </Grid>
</local:CustomWindow>
